<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golden AMI Assessment Lab on APN Equip Labs</title>
    <link>http://example.org/ami-inspector-lab/</link>
    <description>Recent content in Golden AMI Assessment Lab on APN Equip Labs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/ami-inspector-lab/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Solutions Overview</title>
      <link>http://example.org/ami-inspector-lab/solutions_overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/solutions_overview/</guid>
      <description>Here is the overview on how this solution works :
 A scheduled CloudWatch Events event will trigger the AWS Lambda function called StartContinuousAssessment.
 This function will then pulls metadata information containing the golden AMI ID, Instance type, and instructions to prepare the EC2 instance for inspection from AWS Systems Manager Parameter Store
 For each of the AMI specified in the metadata, StartContinuousAssessment Lambda function will create an EC2 instance.</description>
    </item>
    
    <item>
      <title>2. Tag your Golden AMI</title>
      <link>http://example.org/ami-inspector-lab/tag_golden_ami/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/tag_golden_ami/</guid>
      <description>Before we start anything in this solution the first thing we need to do is have the Subject Golden AMI. Now to do this, you can either create your own AMI basing from existing instance running AMI Amazon Linux 2 by following this Guide or you can just use the Amazon public AMI. The following instructions will assume you are using Amazon public AMI. In this part of the lab, we will be applying Tag to the AMI so that our solution can identify information about the AMI.</description>
    </item>
    
    <item>
      <title>3. Store Golden AMI metadata.</title>
      <link>http://example.org/ami-inspector-lab/store_golden_ami_metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/store_golden_ami_metadata/</guid>
      <description>In this section we will walk through the process of construction the golden AMI metadata and store them in AWS Systems Manager Parameter Store our metadata will be specified in JSON format and will contain the following information for each golden AMI:
 The Ami-Id is the golden AMI id that we tagged in the previous step ( Hopefully you&amp;rsquo;ve taken note of that, otherwise please review the previous step ).</description>
    </item>
    
    <item>
      <title>4. Create Lambda Execution role.</title>
      <link>http://example.org/ami-inspector-lab/create_exec_role_for_contasses/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/create_exec_role_for_contasses/</guid>
      <description>Creating Lambda Execution Role for StartContinuousAssessmentLambdaFunction
 Open your notepad / text editor, create a file named GoldenAMIContinuousAssesment.yml. Reference: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html
 Create a resource named StartContinuousAssessmentLambdaRole of type AWS::IAM::Role.
 In the Properties section add ManagedPolicyArns below to allow the lambda function to do basic execution and have access to Amazon Inspector APIs.
 arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole arn:aws:iam::aws:policy/AmazonInspectorFullAccess  In the Properties secion add an AssumeRolePolicyDocument to allow lambda.amazonaws.com service principal role to do an action called sts:AssumeRole.</description>
    </item>
    
    <item>
      <title>5. Create SNS Topic </title>
      <link>http://example.org/ami-inspector-lab/create_snstopic_assesmentcomplete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/create_snstopic_assesmentcomplete/</guid>
      <description>Creating the SNS Topic for Assesment completion
Create Inspection Complete SNS Topic &amp;amp; Policy to allow access for AW Inspector.
 Open your notepad the file you created in step 1 GoldenAMIContinuousAssesment.yml.
 Create a resource named ContinuousAssessmentCompleteTopic of type AWS::SNS::Topic.
 No need to put in any Properties in this resource, keep all empty / default.
 Create another resource named ContinuousAssessmentCompleteTopicPolicy of type AWS::SNS::TopicPolicy.
 In the Properties section create a PolicyDocument and allow service inspector.</description>
    </item>
    
    <item>
      <title>6. Create Lambda Functions</title>
      <link>http://example.org/ami-inspector-lab/create_continuousassess_lambda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/create_continuousassess_lambda/</guid>
      <description>Creating the Lambda Function to Inspect the AMI
 Open your notepad the file you created in step 1 GoldenAMIContinuousAssesment.yml
 Create a resource named StartContinuousAssessmentLambdaFunction of type AWS::Lambda::Function.
 In the Properties section create a Role property and using the !GetAtt intrinsic function reference the IAM role Arn you created in step 1. Reference : https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html
 In the Properties section create a Code property and specify the lambda function code using in line code instead of specifying the s3 bucket location paste in below.</description>
    </item>
    
    <item>
      <title>7. Connect Analyzer to Topic</title>
      <link>http://example.org/ami-inspector-lab/connect_analyzerlambda_sns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/connect_analyzerlambda_sns/</guid>
      <description>Create Lambda Permission to allow SNS service to invoke..
 Open your notepad the file you created in step 1 GoldenAMIContinuousAssesment.yml
 Create a resource named LambdaInvokePermission of type AWS::Lambda::Permission.
 In the Properties section create a FunctionName property and using the !GetAtt intrinsic function reference the AnalyzeInspectorFindingsLambdaRole Arn you created before Reference : https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-getatt.html
 In the Properties section create a Action property and specify lambda:InvokeFunction
 In the Properties section create a Principal property and specify sns.</description>
    </item>
    
    <item>
      <title>10. Test Assesment</title>
      <link>http://example.org/ami-inspector-lab/test_assesment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/test_assesment/</guid>
      <description>Before you schedule vulnerability assessments, you should test the process by running the StartContinuousAssessment function. In this test, you trigger a security assessment and monitor it. You then receive an email after the assessment has completed, which shows that vulnerability assessments have been successfully set up.
To start golden AMI vulnerability assessments:
 Sign in to the AWS Management Console and choose Lambda in the Services menu. Choose Functions. In the Functions pane, choose the StartContinuousAssessment function.</description>
    </item>
    
    <item>
      <title>11. Configure CloudWatch events</title>
      <link>http://example.org/ami-inspector-lab/scheduling_the_continuation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/ami-inspector-lab/scheduling_the_continuation/</guid>
      <description>Set up a CloudWatch Events rule for triggering continuous golden AMI vulnerability assessments
The last step is to create a CloudWatch Events rule to schedule the execution of the vulnerability assessments on a daily or weekly basis.
To set up a CloudWatch Events rule:
 Sign in to the AWS Management Console and navigate to the CloudWatch console. In the navigation pane, choose Rules &amp;gt; Create rule. On the Event Source page, choose Schedule.</description>
    </item>
    
  </channel>
</rss>